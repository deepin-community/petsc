Change MUMPS graph partition dependency from ParMETIS to Scotch.

Index: petsc/config/PETSc/packages/MUMPS.py
===================================================================
--- petsc.orig/config/PETSc/packages/MUMPS.py
+++ petsc/config/PETSc/packages/MUMPS.py
@@ -19,13 +19,12 @@
     self.blasLapack = framework.require('config.packages.BlasLapack',self)
     self.blacs      = framework.require('PETSc.packages.blacs',self)
     self.scalapack  = framework.require('PETSc.packages.SCALAPACK',self)
-    self.parmetis   = framework.require('PETSc.packages.ParMetis',self)
-    self.deps       = [self.parmetis,self.scalapack,self.blacs,self.mpi,self.blasLapack]
-    if self.framework.argDB.get('download-scotch') or self.framework.argDB.get('with-scotch'):
-      self.scotch     = framework.require('PETSc.packages.PTScotch',self)
-      self.deps.append(self.scotch)
+    self.deps       = [self.scalapack,self.blacs,self.mpi,self.blasLapack]
+    if self.framework.argDB.get('download-ptscotch') or self.framework.argDB.get('with-ptscotch'):
+      self.ptscotch     = framework.require('PETSc.packages.PTScotch',self)
+      self.deps.append(self.ptscotch)
     else:
-      self.scotch = 0
+      self.ptscotch = 0
     return
 
   def Install(self):
@@ -37,10 +36,10 @@
     g.write('LPORDDIR   = $(topdir)/PORD/lib/\n')
     g.write('IPORD      = -I$(topdir)/PORD/include/\n')
     g.write('LPORD      = -L$(LPORDDIR) -lpord\n')
-    g.write('IMETIS = '+self.headers.toString(self.parmetis.include)+'\n')
-    g.write('LMETIS = '+self.libraries.toString(self.parmetis.lib)+'\n')
-    orderingsc = '-Dmetis -Dparmetis -Dpord'
-    orderingsf = self.compilers.FortranDefineCompilerOption+'metis '+self.compilers.FortranDefineCompilerOption+'parmetis '+self.compilers.FortranDefineCompilerOption+'pord'
+    #g.write('IMETIS = '+self.headers.toString(self.parmetis.include)+'\n')
+    #g.write('LMETIS = '+self.libraries.toString(self.parmetis.lib)+'\n')
+    orderingsc = '-Dpord'
+    orderingsf = self.compilers.FortranDefineCompilerOption+'pord'
     # Disable threads on BGL
     if self.libraryOptions.isBGL():
       orderingsc += ' -DWITHOUT_PTHREAD'
